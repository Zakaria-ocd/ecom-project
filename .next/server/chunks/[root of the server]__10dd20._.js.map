{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/3aB0z/OneDrive/Documents/GitHub/next.js/next.js-projects/ecom-project/src/db.js"],"sourcesContent":["// Code to connect to MongoDB database using mongoose\r\n// Path: ecom-project/src/db.js\r\nimport mongoose from 'mongoose';\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/ecom';\r\n\r\nlet cached = global.mongo;\r\n\r\nif (!cached) {\r\n    cached = global.mongo = { conn: null, promise: null };\r\n}\r\n\r\nasync function dbConnect() {\r\n    if (cached.conn) {\r\n        return cached.conn;\r\n    }\r\n\r\n    if (!cached.promise) {\r\n        const opts = {\r\n            bufferCommands: false,\r\n        };\r\n\r\n        cached.promise = mongoose.connect(MONGODB_URI, opts).then((mongoose) => {\r\n            return mongoose;\r\n        }).catch((error) => {\r\n            console.error('Failed to connect to MongoDB', error.message);\r\n            throw error;\r\n        });\r\n    }\r\n    cached.conn = await cached.promise;\r\n    return cached.conn;\r\n}\r\n\r\nexport default dbConnect;"],"names":[],"mappings":"AAAA,qDAAqD;AACrD,+BAA+B;;;;AAC/B;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW,IAAI;AAE/C,IAAI,SAAS,OAAO,KAAK;AAEzB,IAAI,CAAC,QAAQ;IACT,SAAS,OAAO,KAAK,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACxD;AAEA,eAAe;IACX,IAAI,OAAO,IAAI,EAAE;QACb,OAAO,OAAO,IAAI;IACtB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACjB,MAAM,OAAO;YACT,gBAAgB;QACpB;QAEA,OAAO,OAAO,GAAG,iGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa,MAAM,IAAI,CAAC,CAAC;YACvD,OAAO;QACX,GAAG,KAAK,CAAC,CAAC;YACN,QAAQ,KAAK,CAAC,gCAAgC,MAAM,OAAO;YAC3D,MAAM;QACV;IACJ;IACA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACtB;uCAEe"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/3aB0z/OneDrive/Documents/GitHub/next.js/next.js-projects/ecom-project/src/models/User.js"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst UserSchema = new mongoose.Schema({\r\n    email: { type: String, required: true, unique: true },\r\n    password: { type: String, required: true },\r\n});\r\n\r\nexport default mongoose.models.User || mongoose.model('User', UserSchema);"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACnC,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;AAC7C;uCAEe,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/3aB0z/OneDrive/Documents/GitHub/next.js/next.js-projects/ecom-project/src/app/api/admin/login/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport dbConnect from '@/db'; \r\nimport User from '@/models/User';\r\nimport bcrypt from 'bcrypt';\r\n\r\nexport async function POST(req) {\r\n    try {\r\n        await dbConnect();\r\n        const { email, password } = await req.json();\r\n        \r\n        const user = await User.findOne({ email });\r\n        if (!user) {\r\n            return NextResponse.json({ message: 'Invalid email' }, { status: 401 });\r\n        }\r\n\r\n        const isMatch = await bcrypt.compare(password, user.password);\r\n        if (!isMatch) {\r\n            return NextResponse.json({ message: 'Invalid password' }, { status: 401 });\r\n        }\r\n\r\n        return NextResponse.json({ message: 'Login successful' });\r\n    } catch (error) {\r\n        console.error('Error in login API:', error.message);\r\n        return NextResponse.json({ message: 'Internal server error' }, { status: 500 });\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEO,eAAe,KAAK,GAAG;IAC1B,IAAI;QACA,MAAM,CAAA,GAAA,2GAAA,CAAA,UAAS,AAAD;QACd,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;QAE1C,MAAM,OAAO,MAAM,uHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE;QAAM;QACxC,IAAI,CAAC,MAAM;YACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAgB,GAAG;gBAAE,QAAQ;YAAI;QACzE;QAEA,MAAM,UAAU,MAAM,+FAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;QAC5D,IAAI,CAAC,SAAS;YACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAmB,GAAG;gBAAE,QAAQ;YAAI;QAC5E;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAmB;IAC3D,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,uBAAuB,MAAM,OAAO;QAClD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAwB,GAAG;YAAE,QAAQ;QAAI;IACjF;AACJ"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}