{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/PC%20G.M.T/OneDrive/Documentos/ecom-OLO/ecom-project/src/db.js"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst MONGODB_URI = 'mongodb://localhost:27017/ecom';\r\n\r\nlet cached = global.mongo;\r\n\r\nif (!cached) {\r\n    cached = global.mongo = { conn: null, promise: null };\r\n}\r\n\r\nasync function dbConnect() {\r\n    if (cached.conn) {\r\n        return cached.conn;\r\n    }\r\n\r\n    if (!cached.promise) {\r\n        const opts = {\r\n            bufferCommands: false,\r\n        };\r\n\r\n        cached.promise = mongoose.connect(MONGODB_URI, opts).then((mongoose) => {\r\n            return mongoose;\r\n        });\r\n    }\r\n    cached.conn = await cached.promise;\r\n    return cached.conn;\r\n}\r\n\r\nexport default dbConnect;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc;AAEpB,IAAI,SAAS,OAAO,KAAK;AAEzB,IAAI,CAAC,QAAQ;IACT,SAAS,OAAO,KAAK,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACxD;AAEA,eAAe;IACX,IAAI,OAAO,IAAI,EAAE;QACb,OAAO,OAAO,IAAI;IACtB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACjB,MAAM,OAAO;YACT,gBAAgB;QACpB;QAEA,OAAO,OAAO,GAAG,iGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa,MAAM,IAAI,CAAC,CAAC;YACvD,OAAO;QACX;IACJ;IACA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACtB;uCAEe"}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/PC%20G.M.T/OneDrive/Documentos/ecom-OLO/ecom-project/src/models/User.js"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst UserSchema = new mongoose.Schema({\r\n    email: { type: String, required: true, unique: true },\r\n    password: { type: String, required: true },\r\n});\r\n\r\nexport default mongoose.models.User || mongoose.model('User', UserSchema);"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACnC,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;AAC7C;uCAEe,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/PC%20G.M.T/OneDrive/Documentos/ecom-OLO/ecom-project/src/app/api/login/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport dbConnect from '../../../db' \r\nimport User from '../../../models/User';\r\nimport bcrypt from 'bcrypt';\r\n\r\nexport async function POST(req) {\r\n    await dbConnect();\r\n\r\n    const { email, password } = await req.json();\r\n\r\n    const user = await User.findOne({ email });\r\n    if (!user) {\r\n        return NextResponse.json({ message: 'Invalid email' }, { status: 401 });\r\n    }\r\n\r\n    const isMatch = await bcrypt.compare(password, user.password);\r\n    if (!isMatch) {\r\n        return NextResponse.json({ message: 'Invalid password' }, { status: 401 });\r\n    }\r\n\r\n    return NextResponse.json({ message: 'Login successfully' });\r\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEO,eAAe,KAAK,GAAG;IAC1B,MAAM,CAAA,GAAA,2GAAA,CAAA,UAAS,AAAD;IAEd,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;IAE1C,MAAM,OAAO,MAAM,uHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;QAAE;IAAM;IACxC,IAAI,CAAC,MAAM;QACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAgB,GAAG;YAAE,QAAQ;QAAI;IACzE;IAEA,MAAM,UAAU,MAAM,+FAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;IAC5D,IAAI,CAAC,SAAS;QACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAmB,GAAG;YAAE,QAAQ;QAAI;IAC5E;IAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;IAAqB;AAC7D"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}